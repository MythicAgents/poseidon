// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: dns.proto

package dnsgrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Actions int32

const (
	Actions_AgentToServer Actions = 0
	Actions_ServerToAgent Actions = 1
	Actions_ReTransmit    Actions = 2
	Actions_MessageLost   Actions = 3
)

// Enum value maps for Actions.
var (
	Actions_name = map[int32]string{
		0: "AgentToServer",
		1: "ServerToAgent",
		2: "ReTransmit",
		3: "MessageLost",
	}
	Actions_value = map[string]int32{
		"AgentToServer": 0,
		"ServerToAgent": 1,
		"ReTransmit":    2,
		"MessageLost":   3,
	}
)

func (x Actions) Enum() *Actions {
	p := new(Actions)
	*p = x
	return p
}

func (x Actions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Actions) Descriptor() protoreflect.EnumDescriptor {
	return file_dns_proto_enumTypes[0].Descriptor()
}

func (Actions) Type() protoreflect.EnumType {
	return &file_dns_proto_enumTypes[0]
}

func (x Actions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Actions.Descriptor instead.
func (Actions) EnumDescriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{0}
}

type DnsPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action         Actions `protobuf:"varint,1,opt,name=Action,proto3,enum=dnsStructs.Actions" json:"Action,omitempty"`
	AgentSessionID uint32  `protobuf:"varint,2,opt,name=AgentSessionID,proto3" json:"AgentSessionID,omitempty"`
	MessageID      uint32  `protobuf:"varint,3,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Size           uint32  `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty"`
	Begin          uint32  `protobuf:"varint,5,opt,name=Begin,proto3" json:"Begin,omitempty"`
	Data           string  `protobuf:"bytes,6,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *DnsPacket) Reset() {
	*x = DnsPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DnsPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsPacket) ProtoMessage() {}

func (x *DnsPacket) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsPacket.ProtoReflect.Descriptor instead.
func (*DnsPacket) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{0}
}

func (x *DnsPacket) GetAction() Actions {
	if x != nil {
		return x.Action
	}
	return Actions_AgentToServer
}

func (x *DnsPacket) GetAgentSessionID() uint32 {
	if x != nil {
		return x.AgentSessionID
	}
	return 0
}

func (x *DnsPacket) GetMessageID() uint32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *DnsPacket) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DnsPacket) GetBegin() uint32 {
	if x != nil {
		return x.Begin
	}
	return 0
}

func (x *DnsPacket) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_dns_proto protoreflect.FileDescriptor

var file_dns_proto_rawDesc = []byte{
	0x0a, 0x09, 0x64, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x64, 0x6e, 0x73,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x09, 0x44, 0x6e, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x6e, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x2a, 0x50, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x74, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x10, 0x03, 0x42, 0x56, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x79, 0x74, 0x68, 0x69, 0x63, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x70, 0x6f, 0x73, 0x65, 0x69, 0x64, 0x6f, 0x6e, 0x2f, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x2f, 0x70, 0x6f, 0x73, 0x65, 0x69, 0x64,
	0x6f, 0x6e, 0x2f, 0x70, 0x6f, 0x73, 0x65, 0x69, 0x64, 0x6f, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x64, 0x6e, 0x73, 0x67, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dns_proto_rawDescOnce sync.Once
	file_dns_proto_rawDescData = file_dns_proto_rawDesc
)

func file_dns_proto_rawDescGZIP() []byte {
	file_dns_proto_rawDescOnce.Do(func() {
		file_dns_proto_rawDescData = protoimpl.X.CompressGZIP(file_dns_proto_rawDescData)
	})
	return file_dns_proto_rawDescData
}

var file_dns_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dns_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_dns_proto_goTypes = []interface{}{
	(Actions)(0),      // 0: dnsStructs.Actions
	(*DnsPacket)(nil), // 1: dnsStructs.DnsPacket
}
var file_dns_proto_depIdxs = []int32{
	0, // 0: dnsStructs.DnsPacket.Action:type_name -> dnsStructs.Actions
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_dns_proto_init() }
func file_dns_proto_init() {
	if File_dns_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dns_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DnsPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dns_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dns_proto_goTypes,
		DependencyIndexes: file_dns_proto_depIdxs,
		EnumInfos:         file_dns_proto_enumTypes,
		MessageInfos:      file_dns_proto_msgTypes,
	}.Build()
	File_dns_proto = out.File
	file_dns_proto_rawDesc = nil
	file_dns_proto_goTypes = nil
	file_dns_proto_depIdxs = nil
}
